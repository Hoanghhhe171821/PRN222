@model SeatBookingViewModel

<h2 class="text-center mb-4 text-glow">Chọn ghế cho suất chiếu: <span class="text-primary">@Model.ShowTime.StartTime</span></h2>

<!-- Chú thích màu sắc -->
<div class="seat-legend d-flex justify-content-center mb-3">
    <div class="legend-item"><div class="seat seat-available"></div> Ghế trống</div>
    <div class="legend-item"><div class="seat seat-booked"></div> Ghế đã đặt</div>
    <div class="legend-item"><div class="seat seat-selected"></div> Ghế đang chọn</div>
</div>

<!-- Sơ đồ ghế -->
<div class="seat-map text-center">
    @for (int row = 1; row <= Model.Seats.Max(s => s.RowNumber); row++)
    {
        <div class="seat-row">
            @foreach (var seat in Model.Seats.Where(s => s.RowNumber == row))
            {
                string seatId = $"{seat.RowNumber}-{seat.CloNumber}";
                bool isBooked = Model.BookedSeatIds.Contains(seat.Id);
                string seatClass = isBooked ? "seat-booked" : "seat-available";

                <div id="@seatId" class="seat @seatClass" data-seat-id="@seat.Id">
                    @seat.RowNumber-@seat.CloNumber
                </div>
            }
        </div>
    }
</div>

<!-- Form đặt vé -->
<form method="post" class="text-center mt-3">
    <input type="hidden" name="selectedSeats" id="selectedSeatsInput" />
    <input type="hidden" name="showTimeId" value="@Model.ShowTime.Id" />
    <input type="hidden" asp-for="ShowTime.RoomId" />
    <button type="submit" class="btn btn-glow">Đặt Ghế</button>
</form>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let selectedSeats = [];
        document.querySelectorAll(".seat").forEach(seat => {
            seat.addEventListener("click", function () {
                let seatId = this.dataset.seatId;
                let isBooked = this.getAttribute("data-is-booked") === "true";

                if (isBooked) return;

                let index = selectedSeats.indexOf(seatId);

                if (index === -1) {
                    selectedSeats.push(seatId);
                    this.classList.add("seat-selected");
                } else {
                    selectedSeats.splice(index, 1);
                    this.classList.remove("seat-selected");
                }
                document.getElementById("selectedSeatsInput").value = selectedSeats.join(",");
            });
        });
    });
</script>

<style>
    /* Tổng thể */
    body {
        background: #ffffff;
        color: #333;
        font-family: 'Poppins', sans-serif;
    }

    /* Hiệu ứng phát sáng nhẹ */
    .text-glow {
        color: #ff416c;
        text-shadow: 0 0 5px rgba(255, 65, 108, 0.5);
    }

    .btn-glow {
        background: linear-gradient(45deg, #ff416c, #ff6a88);
        color: white;
        border: none;
        padding: 10px 20px;
        font-size: 18px;
        border-radius: 50px;
        box-shadow: 0 5px 15px rgba(255, 65, 108, 0.3);
        transition: all 0.3s ease-in-out;
    }

        .btn-glow:hover {
            background: linear-gradient(45deg, #ff6a88, #ff416c);
            box-shadow: 0 5px 25px rgba(255, 65, 108, 0.5);
            transform: scale(1.05);
        }

    /* Chú thích màu ghế */
    .seat-legend {
        display: flex;
        gap: 20px;
        justify-content: center;
        align-items: center;
        background: #f8f9fa;
        padding: 10px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .legend-item {
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 16px;
    }

    /* Sơ đồ ghế */
    .seat-map {
        margin: 20px auto;
        max-width: 600px;
        background: #fff;
        padding: 20px;
        border-radius: 15px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }

    .seat-row {
        display: flex;
        justify-content: center;
        margin-bottom: 10px;
        gap: 12px;
    }

    .seat {
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 10px;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        font-size: 14px;
        text-align: center;
        border: 2px solid #ddd;
    }

    .seat-available {
        background: #00be94;
        color: white;
        box-shadow: 0 0 10px rgba(0, 190, 148, 0.5);
    }

    .seat-booked {
        background: #ff416c;
        color: white;
        pointer-events: none;
        box-shadow: 0 0 10px rgba(255, 65, 108, 0.5);
    }

    .seat-selected {
        background: #ffd700;
        color: black;
        box-shadow: 0 0 15px rgba(255, 215, 0, 0.7);
    }

    .seat:hover {
        transform: scale(1.1);
    }
</style>
